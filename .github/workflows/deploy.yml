name: Deploy

on:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install twine
    
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Deploy to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /opt/crypto_trader
          git pull origin main
          pip install -r requirements.txt
          systemctl restart crypto_trader
          systemctl restart crypto_trader_dashboard
    
    - name: Send deployment notification
      uses: actions/github-script@v6
      with:
        script: |
          const message = `ðŸš€ Deployment completed successfully!\n
          Environment: Production\n
          Branch: ${context.ref}\n
          Commit: ${context.sha}\n
          Triggered by: ${context.actor}\n
          Time: ${new Date().toISOString()}`;
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: message
          }); 